"""
This type stub file was generated by pyright.
"""

from enum import IntEnum, IntFlag
from struct import Struct
from io import BytesIO
from typing import Any, Dict, List, Tuple
from .TypeTreeHelper import TypeTreeNode

TPKTYPETREE: TpkTypeTreeBlob = ...
NODES_CACHE: dict = ...

def init(): ...
def get_typetree_nodes(class_id: int, version: tuple): ...
def generate_flat_nodes(class_info: TpkUnityClass) -> List[TypeTreeNode]: ...

class TpkCompressionType(IntEnum):
    NONE = ...
    Lz4 = ...
    Lzma = ...
    Brotli = ...

class UnityVersionType(IntEnum):
    Alpha = ...
    Beta = ...
    China = ...
    Final = ...
    Patch = ...
    Experimental = ...

class TpkDataType(IntEnum):
    TypeTreeInformation = ...
    Collection = ...
    FileSystem = ...
    Json = ...
    ReferenceAssemblies = ...
    EngineAssets = ...
    def ToBlob(self, stream): ...

class TpkUnityClassFlags(IntFlag):
    NONE = ...
    IsAbstract = ...
    IsSealed = ...
    IsEditorOnly = ...
    IsReleaseOnly = ...
    IsStripped = ...
    Reserved = ...
    HasEditorRootNode = ...
    HasReleaseRootNode = ...

class TpkFile:
    Struct = ...
    TpkMagicBytes: int = ...
    TpkVersionNumber: int = ...
    CompressionType: TpkCompressionType
    DataType: TpkDataType
    CompressedSize: int
    UncompressedSize: int
    CompressedBytes: bytes
    def __init__(self, stream: BytesIO) -> None: ...
    def GetDataBlob(self) -> TpkDataBlob: ...

class TpkDataBlob:
    __slots__ = ...
    DataType: TpkDataType
    def __init__(self, stream: BytesIO) -> None: ...

class TpkTypeTreeBlob(TpkDataBlob):
    __slots__ = ...
    CreationTime: int
    Versions: List[UnityVersion]
    ClassInformation: Dict[int, TpkClassInformation]
    CommonString: TpkCommonString
    NodeBuffer: TpkUnityNodeBuffer
    StringBuffer: TpkStringBuffer
    DataType: TpkDataType = ...
    def __init__(self, stream: BytesIO) -> None: ...

class TpkCollectionBlob(TpkDataBlob):
    __slots__ = ...
    Blobs: List[Tuple[str, TpkDataBlob]]
    def __init__(self, stream: BytesIO) -> None: ...

class TpkFileSystemBlob(TpkDataBlob):
    __slots__ = ...
    Files: List[Tuple[str, bytes]]
    def __init__(self, stream: BytesIO) -> None: ...

class TpkJsonBlob(TpkDataBlob):
    __slots__ = ...
    Text: str
    DataType = ...
    def __init__(self, stream: BytesIO) -> None: ...

class UnityVersion(int):
    """
    use following static methos instead of the constructor(__init__):
        UnityVersion.fromStream(stream: BytesIO)
        UnityVersion.fromString(version: str)
        UnityVersion.fromList(major: int, minor: int, patch: int, build: int)
    """

    @staticmethod
    def fromStream(stream: BytesIO) -> UnityVersion: ...
    @staticmethod
    def fromString(version: str) -> UnityVersion: ...
    @staticmethod
    def fromList(major: int, minor: int, patch: int, build: int) -> UnityVersion: ...
    @property
    def major(self) -> int: ...
    @property
    def minor(self) -> int: ...
    @property
    def build(self) -> int: ...
    @property
    def type(self) -> int: ...
    @property
    def type_number(self) -> int: ...
    def __repr__(self) -> str: ...

class TpkUnityClass:
    __slots__ = ...
    Struct = ...
    Name: int
    Base: int
    Flags: TpkUnityClassFlags
    EditorRootNode: int
    ReleaseRootNode: int
    def __init__(self, stream: BytesIO) -> None: ...
    def __eq__(self, other: TpkUnityClass) -> bool: ...
    def __hash__(self) -> int: ...

class TpkClassInformation:
    __slots__ = ...
    ID: int
    Classes: List[Tuple[UnityVersion, TpkUnityClass]]
    def __init__(self, stream: BytesIO) -> None: ...
    def getVersionedClass(self, version: UnityVersion) -> TpkUnityClass: ...

class TpkUnityNodeBuffer:
    Nodes: List[TpkUnityNode]
    def __init__(self, stream: BytesIO) -> None: ...
    def __getitem__(self, index: int) -> TpkUnityNode: ...

class TpkUnityNode:
    __slots__ = ...
    Struct = ...
    TypeName: int
    Name: int
    ByteSize: int
    Version: int
    TypeFlags: int
    MetaFlag: int
    SubNodes: List[int]
    def __init__(self, stream: BytesIO) -> None: ...
    def __eq__(self, other: TpkUnityNode) -> bool: ...
    def __hash__(self) -> int: ...

class TpkStringBuffer:
    __slots__ = ...
    Strings: List[str]
    def __init__(self, stream: BytesIO) -> None: ...
    @property
    def Count(self) -> int: ...

class TpkCommonString:
    __slots__ = ...
    VersionInformation: List[Tuple[UnityVersion, int]]
    StringBufferIndices: List[int]
    def __init__(self, stream: BytesIO) -> None: ...
    def GetStrings(self, buffer: TpkStringBuffer) -> List[str]: ...
    def GetCount(self, exactVersion: UnityVersion) -> int: ...

BYTE = ...
UINT16 = ...
INT32 = ...
INT64 = ...
UINT64 = ...

def read_string(stream: BytesIO) -> str: ...
def read_data(stream: BytesIO) -> bytes: ...
def get_item_for_version(
    exactVersion: UnityVersion, items: List[Tuple[UnityVersion, Any]]
) -> Any: ...

"""
This type stub file was generated by pyright.
"""

from PIL import Image
from ..enums import BuildTarget, TextureFormat

TF = TextureFormat

def image_to_texture2d(
    img: Image.Image, target_texture_format: TF, flip: bool = ...
): ...
def assert_rgba(img: Image.Image, target_texture_format: TextureFormat): ...
def get_image_from_texture2d(texture_2d, flip=...) -> Image.Image:
    """converts the given texture into PIL.Image

    :param texture_2d: texture to be converterd
    :type texture_2d: Texture2D
    :param flip: flips the image back to the original (all Unity textures are flipped by default)
    :type flip: bool
    :return: PIL.Image object
    :rtype: Image
    """
    ...

def swap_bytes_for_xbox(image_data: bytes, build_target: BuildTarget) -> bytes:
    """swaps the texture bytes
    This is required for textures deployed on XBOX360.

    :param image_data: texture data
    :type image_data: bytes
    :param build_target: platform of the asset
    :type build_target: BuildTarget
    :return: swapped data if platform = XBOX360 else data
    :rtype: bytes
    """
    ...

def pillow(
    image_data: bytes,
    width: int,
    height: int,
    mode: str,
    codec: str,
    args,
    swap: tuple = ...,
) -> Image.Image: ...
def atc(image_data: bytes, width: int, height: int, alpha: bool) -> Image.Image: ...
def astc(
    image_data: bytes, width: int, height: int, block_size: tuple
) -> Image.Image: ...
def pvrtc(image_data: bytes, width: int, height: int, fmt: bool): ...
def etc(image_data: bytes, width: int, height: int, fmt: list): ...
def eac(image_data: bytes, width: int, height: int, fmt: list): ...
def half(
    image_data: bytes,
    width: int,
    height: int,
    mode: str,
    codec: str,
    args,
    swap: tuple = ...,
) -> Image.Image: ...

CONV_TABLE = ...
CONV_TABLE = ...
XBOX_SWAP_FORMATS = ...

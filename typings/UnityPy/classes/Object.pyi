"""
This type stub file was generated by pyright.
"""

from ..streams import EndianBinaryWriter
from ..files import ObjectReader

class Object:
    type_tree: dict
    def __init__(self, reader: ObjectReader) -> None: ...
    def has_struct_member(self, name: str) -> bool: ...
    def dump_typetree(self, nodes: list = ...) -> str: ...
    def dump_typetree_structure(self) -> str: ...
    def read_typetree(self, nodes: list = ...) -> dict: ...
    def save_typetree(self, nodes: list = ..., writer: EndianBinaryWriter = ...): ...
    def get_raw_data(self) -> bytes: ...
    def set_raw_data(self, data): ...
    def save(self, writer: EndianBinaryWriter = ..., intern_call=...): ...
    def __getattr__(
        self, name
    ):  # -> dict[Unknown, Unknown] | (() -> Self@Object) | Any:
        """
        If item not found in __dict__, read type_tree and check if it is in there.
        """
        ...
    def get(self, key, default=...): ...
    def __repr__(self): ...
    def __hash__(self) -> int: ...
    def __eq__(self, other) -> bool: ...

class NodeHelper:
    def __init__(self, data, assets_file) -> None: ...
    def __new__(cls, data, assets_file): ...
    def __getitem__(self, item): ...
    def to_dict(self): ...
    def items(self): ...
    def values(self): ...
    def keys(self): ...
    def __repr__(self): ...

"""
This type stub file was generated by pyright.
"""

from typing import Any, TypeVar
from ..classes.Object import NodeHelper
from ..enums import ClassIDType
from ..streams import EndianBinaryReader, EndianBinaryWriter

_T = TypeVar("_T")

class ObjectReader[_T]:
    byte_start: int
    byte_size: int
    type_id: int
    class_id: int
    type: ClassIDType
    path_id: int
    _read_until: int
    def __init__(self, assets_file, reader: EndianBinaryReader) -> None:
        ...
    
    def write(self, header, writer: EndianBinaryWriter, data_writer: EndianBinaryWriter) -> None:
        ...
    
    def set_raw_data(self, data) -> None:
        ...
    
    @property
    def container(self) -> None:
        ...
    
    @property
    def Position(self) -> int:
        ...
    
    @Position.setter
    def Position(self, pos) -> None:
        ...
    
    def reset(self) -> None:
        ...
    
    def read(self, return_typetree_on_error: bool = ...)  -> _T | NodeHelper | None:
        ...
    
    def get(self, key, default=...) -> Any | None:
        ...
    
    def __getattr__(self, item: str) -> Any | None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def dump_typetree(self, nodes: list = ...) -> str:
        ...
    
    def dump_typetree_structure(self) -> str:
        ...
    
    def get_typetree_nodes(self, nodes: list = ...) -> list:
        ...
    
    def read_typetree(self, nodes: list = ...) -> dict:
        ...
    
    def save_typetree(self, tree: dict, nodes: list = ..., writer: EndianBinaryWriter = ...) -> bytes:
        ...
    
    def get_raw_data(self) -> bytes:
        ...
    
    def set_raw_data(self, data) -> None:
        ...
    


